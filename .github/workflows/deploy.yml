name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: asia-east1
  SERVICE_NAME: mesh-activity-pub-server

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        # TODO: 添加測試命令
        echo "Tests passed"

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Google Auth
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
    
    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v1'
    
    - name: Configure Docker
      run: gcloud auth configure-docker
    
    - name: Build and push image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} .
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }}
        docker tag gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} gcr.io/$PROJECT_ID/$SERVICE_NAME:latest
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:latest
    
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --memory 1Gi \
          --cpu 1 \
          --max-instances 10 \
          --min-instances 0 \
          --port 8080 \
          --set-env-vars DATABASE_URL="${{ secrets.DATABASE_URL }}" \
          --set-env-vars GRAPHQL_ENDPOINT="${{ secrets.GRAPHQL_ENDPOINT }}" \
          --set-env-vars ACTIVITYPUB_DOMAIN="${{ secrets.ACTIVITYPUB_DOMAIN }}" \
          --set-env-vars SECRET_KEY="${{ secrets.SECRET_KEY }}" \
          --set-env-vars REDIS_URL="${{ secrets.REDIS_URL }}"
    
    - name: Show service URL
      run: |
        gcloud run services describe $SERVICE_NAME --region=$REGION --format='value(status.url)'
